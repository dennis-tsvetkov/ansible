connections {
{% for tunnel in strongswan_tunnels %}
{% if inventory_hostname == tunnel.left.inventory_hostname %}
{% set local, remote = tunnel.left, tunnel.right %}
{% endif %}
{% if inventory_hostname == tunnel.right.inventory_hostname %}
{% set local, remote = tunnel.right, tunnel.left %}
{% endif %}
{% if local is defined and remote is defined %}
    {{ tunnel.id }} {
      remote_addrs = {{ remote.public_ip }}
      local {
        auth = {{ tunnel.auth }}
        {% if tunnel.auth == 'pubkey' -%}
	certs = endpoint_cert.pem
        {% endif -%}
        id = "{{ local.inventory_hostname }}"
      }
      remote {
        auth = {{ tunnel.auth }}
        id = "{{ remote.inventory_hostname }}"
      }
      children {
        {{ tunnel.id }} {
          local_ts  = {{ local.local_ip | ansible.utils.ipaddr('network/prefix') }}
          remote_ts = {{ remote.local_ip | ansible.utils.ipaddr('network/prefix') }}
          start_action = {{ tunnel.start_action }}
          {% if tunnel.type=="gre" -%}
          updown = {{ strongswan_conf_dir }}/updown-gre.sh {{ local.local_ip | ansible.utils.ipaddr('address') }}
          {% endif -%}
          {% if tunnel.type=="vti" -%}
          updown = {{ strongswan_conf_dir }}/updown-vti.sh {{ local.local_ip | ansible.utils.ipaddr('address') }}
          mark_in = {{ strongswan_fwmark }}
          mark_out = {{ strongswan_fwmark }}
          {% endif -%}
          esp_proposals = {{ strongswan_child_esp_proposals }}
	  dpd_action = restart
	  rekey_time = 3600s
        }
      }
      proposals = {{ strongswan_proposals }}
      reauth_time = 14400s
      rekey_time = 3600s
      dpd_delay = 30s
      dpd_timeout = 120s
      unique = replace
      {% if not 'tcp' in tunnel or not tunnel.tcp -%}
      encap = yes
      {% endif -%}
    }

{% endif %}
{% endfor %}
}

secrets {
{% for tunnel in strongswan_tunnels %}
{% if tunnel.auth == 'psk' and (inventory_hostname == tunnel.left.inventory_hostname or inventory_hostname == tunnel.right.inventory_hostname) %}
  ike-{{ tunnel.id }}-left {
    id-{{ tunnel.id }}-left = "{{ tunnel.left.inventory_hostname }}"
    secret = "{{ tunnel.psk_secret }}"
  }
  ike-{{ tunnel.id }}-right {
    id-{{ tunnel.id }}-right = "{{ tunnel.right.inventory_hostname }}"
    secret = "{{ tunnel.psk_secret }}"
  }
{% endif %}
{% endfor %}
}
